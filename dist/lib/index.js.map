{"version":3,"file":"index.js","sourceRoot":"","sources":["../../lib/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\nexport {IQueueConfiguration} from './queue/IQueueConfiguration';\nexport {LimitedSizeQueue} from './queue/LimitedSizeQueue';\nimport { ConsoleLogger } from './loggers/ConsoleLogger';\nexport {ILocalStorageLoggerConfiguration} from './loggers/ILocalStorageLoggerConfiguration';\nexport {LocalStorageLogger} from './loggers/LocalStorageLogger';\nexport {ConsoleLogger} from './loggers/ConsoleLogger';\nexport {NullLogger} from './loggers/NullLogger';\n\nexport {DefaultFormatter} from './formatters/DefaultFormatter';\n\nimport {ILocalStorageLoggerConfiguration} from './loggers/ILocalStorageLoggerConfiguration';\nimport {ILog} from './ILog';\nimport { Injectable } from '@angular/core';\nimport { LogLevel } from './core/LogLevel';\nimport { GoogleAnalyticsLogger } from './loggers/GoogleAnalyticsLogger';\nimport { LocalStorageLogger } from './loggers/LocalStorageLogger';\nimport { DefaultFormatter } from './formatters/DefaultFormatter';\nimport { NullLogger } from './loggers/NullLogger';\n\n@Injectable()\nexport class Alogy {\n  private _alogy: ILog;\n  public formatter: DefaultFormatter;\n  private chainTerminal: NullLogger;\n  private consoleLogChain: ConsoleLogger;\n  public localStorageLogChain: LocalStorageLogger;\n  private googleAnalyticsLogChain: GoogleAnalyticsLogger;\n  private _timestampProvider: () => Date = () => new Date;\n  /**\n   * Set up Alogy - Global config\n   * \n   * \n   * \n   * @param {AlogyLogDestination[]} [logTo=[AlogyLogDestination.LOCAL_STORAGE]] Set this to ´GOOGLE_ANALYTICS´ to have that as upper layer, if ´LOCAL_STORAGE´, analytics is not used.\n   * @param {ILocalStorageLoggerConfiguration} config Local storage config\n   * @memberof Alogy\n   */\n  create(\n    logTo: AlogyLogDestination = AlogyLogDestination.LOCAL_STORAGE,\n    config: ILocalStorageLoggerConfiguration\n  ){\n    this.formatter = new DefaultFormatter();\n    // Chain of responsibility style pattern here...\n    this.chainTerminal = new NullLogger();\n    this.consoleLogChain = new ConsoleLogger(this.formatter, this.chainTerminal);\n    this.localStorageLogChain = new LocalStorageLogger(config, this.consoleLogChain);\n    this.googleAnalyticsLogChain = new GoogleAnalyticsLogger(this.formatter, this.localStorageLogChain); //(config, this.localStorageLogChain);\n  }\n\n  getLogAPI(\n    logGroup: number,\n    logTo: AlogyLogDestination = AlogyLogDestination.LOCAL_STORAGE\n  ):LogAPI {\n    return new LogAPI(this, logTo, logGroup);\n  }\n\n  writeToLog(logTo: AlogyLogDestination, level: LogLevel, message: string, logCodeGroup: number, code?: number) {\n    let time = this._timestampProvider().toISOString();\n    /** @todo Missing logCodeGroup + code config */\n    switch (logTo) {\n      case AlogyLogDestination.GOOGLE_ANALYTICS:\n        console.error('not implemented yet'); /** @todo implement GOOGLE ANALYTICS LOGGING */  \n        /*this.localStorageLogChain.log({\n          level, time, message: message\n        });*/\n        break;\n      case AlogyLogDestination.LOCAL_STORAGE:\n        this.localStorageLogChain.log({\n          level, time, message: message\n        });\n        break;\n    }\n  }\n}\n\nexport class LogAPI implements ILog {\n  constructor(\n    private _alogy: Alogy,\n    private logTo: AlogyLogDestination = AlogyLogDestination.LOCAL_STORAGE,\n    private logGroup: number = 99,\n  ) {\n  }\n  debug(message: string, code ?: number) {\n    this._alogy.writeToLog(this.logTo, LogLevel.DEBUG, message, this.logGroup, code);\n  }\n  info(message: string, code ?: number) {\n    this._alogy.writeToLog(this.logTo, LogLevel.INFO, message, this.logGroup, code);\n  }\n  warn(message: string, code ?: number) {\n    this._alogy.writeToLog(this.logTo, LogLevel.WARN, message, this.logGroup, code);\n  }\n  error(message: string, code ?: number) {\n    this._alogy.writeToLog(this.logTo, LogLevel.ERROR, message, this.logGroup, code);\n  }\n  exportToArray(): string[] {\n    return this._alogy.localStorageLogChain.allEntries().map(entry => this._alogy.formatter.format(entry)); /** @todo implement this */\n  }\n}\n\nexport enum AlogyLogDestination {\n  LOCAL_STORAGE, // LS -> CONSOLE\n  GOOGLE_ANALYTICS // GA -> LS -> CONSOLE\n}"]}
{"version":3,"sources":["../../lib/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { NgModule } from '@angular/core';\nexport {IQueueConfiguration} from './queue/IQueueConfiguration';\nexport {LimitedSizeQueue} from './queue/LimitedSizeQueue';\nimport { ConsoleLogger } from './loggers/ConsoleLogger';\nexport {ILocalStorageLoggerConfiguration} from './loggers/ILocalStorageLoggerConfiguration';\nexport {LocalStorageLogger} from './loggers/LocalStorageLogger';\nexport {ConsoleLogger} from './loggers/ConsoleLogger';\nexport {NullLogger} from './loggers/NullLogger';\n\nexport {DefaultFormatter} from './formatters/DefaultFormatter';\n\nimport {ILocalStorageLoggerConfiguration} from './loggers/ILocalStorageLoggerConfiguration';\nimport {ILog} from './ILog';\nimport { Injectable } from '@angular/core';\nimport { LogLevel } from './core/LogLevel';\nimport { GoogleAnalyticsLogger } from './loggers/GoogleAnalyticsLogger';\nimport { LocalStorageLogger } from './loggers/LocalStorageLogger';\nimport { DefaultFormatter } from './formatters/DefaultFormatter';\nimport { NullLogger } from './loggers/NullLogger';\n\n\nexport class Alogy {\n  private _alogy: ILog;\n  private formatter: DefaultFormatter;\n  private chainTerminal: NullLogger;\n  private consoleLogChain: ConsoleLogger;\n  private localStorageLogChain: LocalStorageLogger;\n  private googleAnalyticsLogChain: GoogleAnalyticsLogger;\n  /**\n   * Set up Alogy - Global config\n   * \n   * \n   * \n   * @param {AlogyLogDestination[]} [logTo=[AlogyLogDestination.LOCAL_STORAGE]] Set this to ´GOOGLE_ANALYTICS´ to have that as upper layer, if ´LOCAL_STORAGE´, analytics is not used.\n   * @param {ILocalStorageLoggerConfiguration} config Local storage config\n   * @memberof Alogy\n   */\n  create(\n    logTo: AlogyLogDestination = AlogyLogDestination.LOCAL_STORAGE,\n    config: ILocalStorageLoggerConfiguration\n  ){\n    this.formatter = new DefaultFormatter();\n    // Chain of responsibility style pattern here...\n    this.chainTerminal = new NullLogger();\n    this.consoleLogChain = new ConsoleLogger(this.formatter, this.chainTerminal);\n    this.localStorageLogChain = new LocalStorageLogger(config, this.consoleLogChain);\n    this.googleAnalyticsLogChain = new GoogleAnalyticsLogger(); //(config, this.localStorageLogChain);\n  }\n\n  getLogAPI(\n    logGroup: number,\n    logTo: AlogyLogDestination = AlogyLogDestination.LOCAL_STORAGE\n  ):LogAPI {\n    return new LogAPI(this, logTo, logGroup);\n  }\n\n\n  private _timestampProvider: () => Date = () => new Date;\n\n  writeToLog(logTo: AlogyLogDestination, level: LogLevel, message: string, logCodeGroup: number, code?: number) {\n    let time = this._timestampProvider().toISOString();\n    /** @todo Missing logCodeGroup + code config */\n    switch (logTo) {\n      case AlogyLogDestination.GOOGLE_ANALYTICS:\n        console.error('not implemented yet'); /** @todo implement GOOGLE ANALYTICS LOGGING */  \n        /*this.localStorageLogChain.log({\n          level, time, message: message\n        });*/\n        break;\n      case AlogyLogDestination.LOCAL_STORAGE:\n        this.localStorageLogChain.log({\n          level, time, message: message\n        });\n        break;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nexport class LogAPI implements ILog {\n  constructor(\n    private _alogy: Alogy,\n    private logTo: AlogyLogDestination = AlogyLogDestination.LOCAL_STORAGE,\n    private logGroup: number = 99,\n  ) {\n  }\n  debug(message: string, code ?: number) {\n    this._alogy.writeToLog(this.logTo, LogLevel.DEBUG, message, this.logGroup, code);\n  }\n  info(message: string, code ?: number) {\n    this._alogy.writeToLog(this.logTo, LogLevel.INFO, message, this.logGroup, code);\n  }\n  warn(message: string, code ?: number) {\n    this._alogy.writeToLog(this.logTo, LogLevel.WARN, message, this.logGroup, code);\n  }\n  error(message: string, code ?: number) {\n    this._alogy.writeToLog(this.logTo, LogLevel.ERROR, message, this.logGroup, code);\n  }\n  exportToArray(): string[] {\n    return [];\n    //return this._alogy.localStorageLogChain.allEntries().map(entry => this.formatter.format(entry)); /** @todo implement this */\n  }\n}\n\nexport enum AlogyLogDestination {\n  LOCAL_STORAGE, // LS -> CONSOLE\n  GOOGLE_ANALYTICS // GA -> LS -> CONSOLE\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}